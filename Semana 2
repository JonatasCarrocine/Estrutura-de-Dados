#include <stdio.h>
#include <stdlib.h>

/*Funcao responsavel em separar os votos totais, para cada candidato*/
void separarVotos(int *voto,int contador, int votoPorCandidato[])
{
    /*Declarando as variaveis locais da funcao*/
    int i,j,ocorre=0;
    for(i=0; i<contador; i++)
    {
        ocorre=1; /*Declaramos a variavel "ocorre" em 1 caso nao encontre outros votos iguais*/
        /*Outro "for" e utilizamos para comparar voto por voto e contabilizar*/
        for(j=i+1; j<contador; j++)
        {
            if(*(voto+i)==*(voto+j)) /*Caso o numero do voto em 'i' seje igual ao encontrado em 'j'*/
            {
                ocorre++; /*Incrementa o valor da ocorrencia para um candidato*/
                votoPorCandidato[j]=0; /*Declaramos o 'j' como 0, para verificar o proximo elemento da array */
            }
        }
        if(votoPorCandidato[i]!=0)
        {
            /*Caso exista algum voto para o candidato, o valor e substituido pelo valor de 'ocorre'*/
            votoPorCandidato[i]=ocorre;
        }
    }
}

/*Funcao responsavel mostrar o candidato vencedor*/
void eleito(int votoPorCandidato[], int *voto, int contador)
{
    /*Declaracao das variaveis locais desta funcao*/
    int i, maior=0, vencedor;
    /*Mostrar o candidato com mais votos*/
    for(i=0; i<contador; i++)
    {
        /*Verifica se o elemento do vetor e maior que a variavel 'maior', inicialmente em 0*/
        if(votoPorCandidato[i]>maior)
        {
            /*'maior' recebe o valor do elemento da array*/
            maior=votoPorCandidato[i];
            /*Declara o candidato do elemento da array como o vencedor da eleicao*/
            vencedor=*(voto+i);
        }
        /*Caso os proximos elementos da array sejam iguais ao da variavel 'maior', teremos
          tecnicamente um empate, logo o candidato referenciado pelo maior numero deve
          ganhar a eleicao */
        else if(votoPorCandidato[i]==maior)
        {
            /*Mostra que teve um empate, e verifica se o elemento da array de candidatos
              e maior que o valor de vencedor, atribuido anteriormente*/
            if(*(voto+i)>vencedor)
            {
                /*Declara novamente o candidato, pelo maior numero referenciado*/
                vencedor=*(voto+i);
            }
            /*Caso contrario, nao e necessario alterar o vencedor*/
        }
    }
    /*Imprime o candidato que venceu a eleicao*/
    printf("Candidato %d venceu a eleicao",vencedor);
}

int main(void)
{
    /*Declarando as variaveis*/
    int *voto; /*Este vai ser o ponteiro para armazenar os votos*/
    int x,candidatos,contador=0;

    /*Alocando espaco para armazenar os votos das pessoas*/
    voto=(int *)malloc(sizeof(int));
    if(voto==NULL)/*Verificando se e possivel alocar espaco*/
    {
        printf("NÃ£o foi possivel alocar o vetor!");
        exit(0);
    }
    /*Digitar a quantidade de candidatos na disputa pela eleicao*/
    printf("Digite a quantidade de candidatos: ");
    scanf("%d",&candidatos);
    /*Sera criado um vetor para armazenar a quantidade de votos para cada candidato*/
    int votoPorCandidato[candidatos];

    /*Sera inserido o primeiro valor*/
    printf("Digite um voto: \n");
    scanf("%d",&x);
    *(voto+contador)=x; /*armazena o voto no ponteiro*/
    /*OBS: Como sugerido no enunciado, esta sendo utilizado uma aritmerica de ponteiros
    (ao inves de voto[contador], tambem e utilizado em outras partes do programa)*/
    contador++;
    /*Enquanto nao for digitado um valor negativo, vai ser inserido os valores*/
    while(x>=0)
    {
        printf("Digite um voto: \n");
        scanf("%d",&x);
        /*Caso seja inserido um valor maior que a quantidade de candidatos, ou menor que 0*/
        if(x<=0)
        {
            printf("Fim da apuracao de votos\n"); /*Termina o registro de votos*/
        }
        else if(x>candidatos)
        {
            printf("Invalido!! Coloque outro valor!\n");
            /*Alem de mostrar que e invalido, nao vai ser inserido no vetor ponteiro e nem vai ser contabilizado*/
        }
        else
        {
            /*O ponteiro sera realocado, para armazenar um espaco a mais para cada voto inserido*/
            voto=(int *)realloc(voto,(contador+1)*sizeof(int));
            *(voto+contador)=x; /*armazena o voto no ponteiro*/
            contador++; /*Incrementa a quantidade de votos*/
        }
    }

    separarVotos(voto,contador,votoPorCandidato); /*Chama a funcao que ira separar os votos para cada candidato*/

    eleito(votoPorCandidato,voto,contador); /*Chama a funcao que ira retornar o vencedor da eleicao*/

    free(voto);
    return 0;
}
